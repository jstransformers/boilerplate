version: 2.1

refs:
  - &only_master
    filters:
      branches:
        only: master

  - &not_master
    filters:
      branches:
        ignore: master

workflows:
  test:
    jobs:
      - unit-tests:
          <<: *not_master
          name: node-8
          version: "8"
      - unit-tests:
          <<: *not_master
          name: node-10
          version: "10"
      - unit-tests:
          <<: *not_master
          name: node-12
          version: "12"
      - unit-tests:
          <<: *not_master
          name: node-13
          version: "13"

  release:
    jobs:
      - unit-tests:
          <<: *only_master
          name: node-8
          version: "8"
      - unit-tests:
          <<: *only_master
          name: node-10
          version: "10"
      - unit-tests:
          <<: *only_master
          name: node-12
          version: "12"
      - unit-tests:
          <<: *not_master
          name: node-13
          version: "13"

      - publish-dry-run:
          <<: *only_master
          context: master

      - publish-approval:
          type: approval
          context: master
          requires:
            - publish-dry-run

      - publish:
          <<: *only_master
          context: master
          requires:
            - node-8
            - node-10
            - node-12
            - publish-approval

  monthly:
    triggers:
      - schedule:
          cron: '0 0 1 * *'
          <<: *only_master
    jobs:
      - unit-tests:
          name: node-8
          version: "8"
      - unit-tests:
          name: node-10
          version: "10"
      - unit-tests:
          name: node-12
          version: "12"
jobs:
  unit-tests:
    parameters:
      version:
        type: string
    docker:
      - image: circleci/node:<< parameters.version >>
    steps:
      - setup
      - test

  publish-dry-run:
    docker:
      - image: circleci/node:12
    steps:
      - setup
      - publish-dry-run

  publish:
    docker:
      - image: circleci/node:12
    steps:
      - setup
      - publish

commands:
  setup:
    description: "Checkout and install dependencies"
    steps:
      - checkout
      - run:
          name: Versions
          command: node -v && npm -v
      - run:
          name: Install Dependencies
          command: npm install

  test:
    steps:
      - run:
          name: Test
          command: npm test

  publish-dry-run:
    steps:
      - run:
          name: Release (Dry Run)
          command: npx semantic-release --dry-run

  publish:
    steps:
      - run:
          name: NPM Auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Release
          command: npx semantic-release
